#!/bin/bash

# Matrix Synapse Management Module v1.0
# –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏–µ–π –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ root
if [ "$(id -u)" -ne 0 ]; then
  echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç root" >&2
  exit 1
fi

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
HOMESERVER_CONFIG="/opt/synapse-data/homeserver.yaml"
DOCKER_COMPOSE_CONFIG="/opt/synapse-config/docker-compose.yml"
BACKUP_DIR="/opt/synapse-backups"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Synapse
check_synapse_installation() {
  if [ ! -f "$HOMESERVER_CONFIG" ]; then
    echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Synapse –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $HOMESERVER_CONFIG"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Matrix"
    return 1
  fi
  
  if ! docker ps | grep -q "matrix-synapse"; then
    echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä matrix-synapse –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd /opt/synapse-config && docker compose up -d synapse"
    return 1
  fi
  
  return 0
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
backup_config() {
  local timestamp=$(date +"%Y%m%d_%H%M%S")
  local backup_file="$BACKUP_DIR/homeserver_${timestamp}.yaml"
  
  mkdir -p "$BACKUP_DIR"
  
  if cp "$HOMESERVER_CONFIG" "$backup_file"; then
    echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
    return 0
  else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    return 1
  fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Synapse
restart_synapse() {
  echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Matrix Synapse..."
  
  cd /opt/synapse-config 2>/dev/null || { echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; return 1; }
  
  if docker compose restart synapse; then
    echo "‚úÖ Synapse –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    echo "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Synapse..."
    for i in {1..12}; do
      if curl -s http://localhost:8008/health >/dev/null 2>&1; then
        echo "‚úÖ Synapse –≥–æ—Ç–æ–≤!"
        return 0
      else
        echo "   –û–∂–∏–¥–∞–Ω–∏–µ... ($i/12)"
        sleep 5
      fi
    done
    
    echo "‚ö†Ô∏è  Synapse –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker logs matrix-synapse"
    return 1
  else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Synapse"
    return 1
  fi
}

# =============================================================================
# –£–ü–†–ê–í–õ–ï–ù–ò–ï –§–ï–î–ï–†–ê–¶–ò–ï–ô
# =============================================================================

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
get_federation_status() {
  local whitelist=$(grep -A 10 "federation_domain_whitelist:" "$HOMESERVER_CONFIG" | grep -E "^\s*-\s+" | wc -l)
  local suppress_warning=$(grep "suppress_key_server_warning:" "$HOMESERVER_CONFIG" | grep -o "true\|false")
  
  if [ "$whitelist" -eq 0 ]; then
    echo "‚ùå –û–¢–ö–õ–Æ–ß–ï–ù–ê (–ø—É—Å—Ç–æ–π whitelist)"
  else
    echo "‚úÖ –í–ö–õ–Æ–ß–ï–ù–ê ($whitelist –¥–æ–º–µ–Ω–æ–≤ –≤ whitelist)"
  fi
  
  echo "–ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $suppress_warning"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
show_federation_domains() {
  echo "=== –°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ ==="
  echo ""
  
  local domains=$(grep -A 20 "federation_domain_whitelist:" "$HOMESERVER_CONFIG" | grep -E "^\s*-\s+" | sed 's/^\s*-\s*//')
  
  if [ -z "$domains" ]; then
    echo "üìã –§–µ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ (–ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤)"
  else
    echo "üìã –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã:"
    echo "$domains" | nl -w2 -s'. '
  fi
  
  echo ""
  local suppress=$(grep "suppress_key_server_warning:" "$HOMESERVER_CONFIG" | grep -o "true\|false")
  echo "üîá –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π key server: $suppress"
}

# –§—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
enable_federation() {
  echo "=== –í–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ Matrix ==="
  echo ""
  
  echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –í–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É:"
  echo "   ‚Ä¢ –û–±—â–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –¥—Ä—É–≥–∏—Ö Matrix —Å–µ—Ä–≤–µ—Ä–æ–≤"
  echo "   ‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –ø—É–±–ª–∏—á–Ω—ã–º –∫–æ–º–Ω–∞—Ç–∞–º"
  echo "   ‚Ä¢ –û–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Å —Ñ–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å–µ—Ç—å—é"
  echo ""
  echo "üîí –°–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:"
  echo "   ‚Ä¢ –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏"
  echo "   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω—ã —Å–ø–∞–º –∏ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"
  echo "   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è whitelist –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"
  echo ""
  
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏? (y/N): " confirm
  if [[ $confirm != [yY] ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return 0
  fi
  
  echo ""
  echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏:"
  echo "1. –ü–æ–ª–Ω–∞—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è (–≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã) - –ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø"
  echo "2. Whitelist —Å–µ—Ä–≤–µ—Ä–æ–≤ (–±–µ–∑–æ–ø–∞—Å–Ω–æ)"
  echo "3. –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã (matrix.org, element.io)"
  echo ""
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-3): " fed_choice
  
  case $fed_choice in
    1)
      enable_full_federation
      ;;
    2)
      enable_whitelist_federation
      ;;
    3)
      enable_trusted_federation
      ;;
    *)
      echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
      return 1
      ;;
  esac
}

# –ü–æ–ª–Ω–∞—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è (—É–¥–∞–ª–µ–Ω–∏–µ whitelist)
enable_full_federation() {
  echo "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ü–æ–ª–Ω–∞—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –¥–ª—è –í–°–ï–• Matrix —Å–µ—Ä–≤–µ—Ä–æ–≤!"
  read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " final_confirm
  
  if [ "$final_confirm" != "YES" ]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return 0
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  # –£–¥–∞–ª—è–µ–º –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º federation_domain_whitelist
  sed -i 's/^federation_domain_whitelist:/# federation_domain_whitelist: # –ü–û–õ–ù–ê–Ø –§–ï–î–ï–†–ê–¶–ò–Ø/' "$HOMESERVER_CONFIG"
  sed -i '/^# federation_domain_whitelist: # –ü–û–õ–ù–ê–Ø –§–ï–î–ï–†–ê–¶–ò–Ø/,/^[a-zA-Z]/{/^[[:space:]]*-/d;}' "$HOMESERVER_CONFIG"
  
  # –í–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è key server
  sed -i 's/suppress_key_server_warning: true/suppress_key_server_warning: false/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –ü–æ–ª–Ω–∞—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞"
  restart_synapse
}

# Whitelist —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è
enable_whitelist_federation() {
  echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ whitelist —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ ==="
  echo ""
  echo "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è"
  echo "–ü—Ä–∏–º–µ—Ä—ã: matrix.org, element.io, t2bot.io"
  echo "–í–≤–æ–¥–∏—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É –¥–æ–º–µ–Ω—É, –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤–≤–æ–¥"
  echo ""
  
  local domains=()
  while true; do
    read -p "–î–æ–º–µ–Ω (–∏–ª–∏ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): " domain
    
    if [ -z "$domain" ]; then
      break
    fi
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–º–µ–Ω–∞
    if [[ "$domain" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
      domains+=("$domain")
      echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: $domain"
    else
      echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω–∞: $domain"
    fi
  done
  
  if [ ${#domains[@]} -eq 0 ]; then
    echo "‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞"
    return 1
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π whitelist
  local whitelist_section="federation_domain_whitelist:"
  for domain in "${domains[@]}"; do
    whitelist_section+="\n  - \"$domain\""
  done
  
  # –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π whitelist
  sed -i '/^federation_domain_whitelist:/,/^[a-zA-Z]/{/^federation_domain_whitelist:/!{/^[a-zA-Z]/!d;}}' "$HOMESERVER_CONFIG"
  sed -i "s/^federation_domain_whitelist:.*/$whitelist_section/" "$HOMESERVER_CONFIG"
  
  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è key server
  sed -i 's/suppress_key_server_warning: true/suppress_key_server_warning: false/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ Whitelist —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å ${#domains[@]} –¥–æ–º–µ–Ω–∞–º–∏"
  restart_synapse
}

# –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã
enable_trusted_federation() {
  if ! backup_config; then
    return 1
  fi
  
  # –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
  local trusted_domains=(
    "matrix.org"
    "element.io"
    "mozilla.org"
    "kde.org"
    "gnome.org"
  )
  
  local whitelist_section="federation_domain_whitelist:"
  for domain in "${trusted_domains[@]}"; do
    whitelist_section+="\n  - \"$domain\""
  done
  
  # –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π whitelist
  sed -i '/^federation_domain_whitelist:/,/^[a-zA-Z]/{/^federation_domain_whitelist:/!{/^[a-zA-Z]/!d;}}' "$HOMESERVER_CONFIG"
  sed -i "s/^federation_domain_whitelist:.*/$whitelist_section/" "$HOMESERVER_CONFIG"
  
  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è key server
  sed -i 's/suppress_key_server_warning: true/suppress_key_server_warning: false/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –§–µ–¥–µ—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏:"
  printf '%s\n' "${trusted_domains[@]}" | nl -w2 -s'. '
  
  restart_synapse
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
disable_federation() {
  echo "=== –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ Matrix ==="
  echo ""
  echo "‚ö†Ô∏è  –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ –æ–∑–Ω–∞—á–∞–µ—Ç:"
  echo "   ‚Ä¢ –ü–æ—Ç–µ—Ä—è —Å–≤—è–∑–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"
  echo "   ‚Ä¢ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º –∫–æ–º–Ω–∞—Ç–∞–º"
  echo "   ‚Ä¢ –ò–∑–æ–ª—è—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)"
  echo ""
  
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏? (y/N): " confirm
  if [[ $confirm != [yY] ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return 0
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  # –û—á–∏—â–∞–µ–º whitelist (–¥–µ–ª–∞–µ–º –ø—É—Å—Ç—ã–º)
  sed -i '/^federation_domain_whitelist:/,/^[a-zA-Z]/{/^federation_domain_whitelist:/!{/^[a-zA-Z]/!d;}}' "$HOMESERVER_CONFIG"
  sed -i 's/^federation_domain_whitelist:.*/federation_domain_whitelist: []/' "$HOMESERVER_CONFIG"
  
  # –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π key server
  sed -i 's/suppress_key_server_warning: false/suppress_key_server_warning: true/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –§–µ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
  restart_synapse
}

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞ –≤ —Ñ–µ–¥–µ—Ä–∞—Ü–∏—é
add_federation_domain() {
  echo "=== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞ –≤ —Ñ–µ–¥–µ—Ä–∞—Ü–∏—é ==="
  echo ""
  
  read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: " domain
  
  if [ -z "$domain" ]; then
    echo "‚ùå –î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
    return 1
  fi
  
  # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–º–µ–Ω–∞
  if ! [[ "$domain" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω–∞: $domain"
    return 1
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ
  if grep -A 20 "federation_domain_whitelist:" "$HOMESERVER_CONFIG" | grep -q "\"$domain\""; then
    echo "‚ö†Ô∏è  –î–æ–º–µ–Ω $domain —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏"
    return 0
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É whitelist –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω
  local last_line=$(grep -n -A 20 "federation_domain_whitelist:" "$HOMESERVER_CONFIG" | grep -E "^\s*-\s+" | tail -1 | cut -d: -f1)
  
  if [ -z "$last_line" ]; then
    # –ï—Å–ª–∏ whitelist –ø—É—Å—Ç–æ–π, –∑–∞–º–µ–Ω—è–µ–º [] –Ω–∞ —Å–ø–∏—Å–æ–∫
    sed -i "s/federation_domain_whitelist: \[\]/federation_domain_whitelist:\n  - \"$domain\"/" "$HOMESERVER_CONFIG"
  else
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–ø–∏—Å–æ–∫
    sed -i "${last_line}a\\  - \"$domain\"" "$HOMESERVER_CONFIG"
  fi
  
  echo "‚úÖ –î–æ–º–µ–Ω $domain –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ñ–µ–¥–µ—Ä–∞—Ü–∏—é"
  restart_synapse
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞ –∏–∑ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
remove_federation_domain() {
  echo "=== –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞ –∏–∑ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ ==="
  echo ""
  
  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
  local domains=$(grep -A 20 "federation_domain_whitelist:" "$HOMESERVER_CONFIG" | grep -E "^\s*-\s+" | sed 's/^\s*-\s*"//' | sed 's/"//')
  
  if [ -z "$domains" ]; then
    echo "üìã –°–ø–∏—Å–æ–∫ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ –ø—É—Å—Ç"
    return 0
  fi
  
  echo "üìã –¢–µ–∫—É—â–∏–µ –¥–æ–º–µ–Ω—ã –≤ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏:"
  echo "$domains" | nl -w2 -s'. '
  echo ""
  
  read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: " domain
  
  if [ -z "$domain" ]; then
    echo "‚ùå –î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
    return 1
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ–º–µ–Ω –≤ —Å–ø–∏—Å–∫–µ
  if ! echo "$domains" | grep -q "^$domain$"; then
    echo "‚ùå –î–æ–º–µ–Ω $domain –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏"
    return 1
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  # –£–¥–∞–ª—è–µ–º –¥–æ–º–µ–Ω –∏–∑ whitelist
  sed -i "/federation_domain_whitelist:/,/^[a-zA-Z]/{/\"$domain\"/d;}" "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –î–æ–º–µ–Ω $domain —É–¥–∞–ª–µ–Ω –∏–∑ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏"
  restart_synapse
}

# =============================================================================
# –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ï–ì–ò–°–¢–†–ê–¶–ò–ï–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
# =============================================================================

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
get_registration_status() {
  local enable_reg=$(grep "enable_registration:" "$HOMESERVER_CONFIG" | grep -o "true\|false")
  local require_token=$(grep "registration_requires_token:" "$HOMESERVER_CONFIG" | grep -o "true\|false")
  local shared_secret=$(grep "registration_shared_secret:" "$HOMESERVER_CONFIG" | cut -d'"' -f2)
  
  echo "–ü—É–±–ª–∏—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: $enable_reg"
  echo "–¢—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω: $require_token"
  echo "Shared secret: ${shared_secret:0:8}... (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
show_registration_settings() {
  echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ==="
  echo ""
  
  local enable_reg=$(grep "enable_registration:" "$HOMESERVER_CONFIG" | grep -o "true\|false")
  local require_token=$(grep "registration_requires_token:" "$HOMESERVER_CONFIG" | grep -o "true\|false")
  local shared_secret=$(grep "registration_shared_secret:" "$HOMESERVER_CONFIG" | cut -d'"' -f2)
  
  echo "üìù –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
  echo "   –ü—É–±–ª–∏—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: $enable_reg"
  echo "   –¢—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω: $require_token"
  echo ""
  
  if [ "$enable_reg" = "true" ]; then
    if [ "$require_token" = "true" ]; then
      echo "üîê –†–µ–∂–∏–º: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ —Ç–æ–∫–µ–Ω–∞–º"
    else
      echo "üåê –†–µ–∂–∏–º: –û—Ç–∫—Ä—ã—Ç–∞—è –ø—É–±–ª–∏—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
    fi
  else
    echo "üö´ –†–µ–∂–∏–º: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)"
  fi
  
  echo ""
  echo "üîë Shared Secret (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤): ${shared_secret:0:12}..."
  echo ""
  echo "üí° –°–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
  echo "   1. –ß–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∞ —Å shared secret"
  echo "   2. –ß–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)"
  echo "   3. –û—Ç–∫—Ä—ã—Ç–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)"
}

# –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
configure_registration() {
  echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ==="
  echo ""
  echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:"
  echo "1. üö´ –û—Ç–∫–ª—é—á–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã) - –ë–ï–ó–û–ü–ê–°–ù–û"
  echo "2. üîê –¢–æ–ª—å–∫–æ –ø–æ —Ç–æ–∫–µ–Ω–∞–º - –£–ú–ï–†–ï–ù–ù–û –ë–ï–ó–û–ü–ê–°–ù–û"
  echo "3. üåê –û—Ç–∫—Ä—ã—Ç–∞—è –ø—É–±–ª–∏—á–Ω–∞—è - –ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø"
  echo ""
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-3): " reg_choice
  
  case $reg_choice in
    1)
      set_registration_disabled
      ;;
    2)
      set_registration_token_only
      ;;
    3)
      set_registration_open
      ;;
    *)
      echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
      return 1
      ;;
  esac
}

# –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
set_registration_disabled() {
  echo "=== –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ==="
  echo ""
  echo "‚úÖ –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º:"
  echo "   ‚Ä¢ –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º–∏"
  echo "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è registration_shared_secret"
  echo "   ‚Ä¢ –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
  echo ""
  
  if ! backup_config; then
    return 1
  fi
  
  sed -i 's/enable_registration: true/enable_registration: false/' "$HOMESERVER_CONFIG"
  sed -i 's/registration_requires_token: false/registration_requires_token: true/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
  echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑:"
  echo "   docker exec -it matrix-synapse register_new_matrix_user -c /data/homeserver.yaml http://localhost:8008"
  
  restart_synapse
}

# –í–∫–ª—é—á–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –ø–æ —Ç–æ–∫–µ–Ω–∞–º
set_registration_token_only() {
  echo "=== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ —Ç–æ–∫–µ–Ω–∞–º ==="
  echo ""
  echo "‚ö†Ô∏è  –£–º–µ—Ä–µ–Ω–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º:"
  echo "   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–∞–º"
  echo "   ‚Ä¢ –¢–æ–∫–µ–Ω—ã —Å–æ–∑–¥–∞—é—Ç –∏ —É–ø—Ä–∞–≤–ª—è—é—Ç –∞–¥–º–∏–Ω—ã"
  echo "   ‚Ä¢ –ú–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π"
  echo ""
  
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–æ–∫–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏? (y/N): " confirm
  if [[ $confirm != [yY] ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return 0
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  sed -i 's/enable_registration: false/enable_registration: true/' "$HOMESERVER_CONFIG"
  sed -i 's/registration_requires_token: false/registration_requires_token: true/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –¢–æ–∫–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞"
  echo ""
  echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏:"
  echo "   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Synapse Admin –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã"
  echo "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä: docker exec matrix-synapse synapse_review_recent_signups"
  echo ""
  
  restart_synapse
}

# –í–∫–ª—é—á–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
set_registration_open() {
  echo "=== –û–¢–ö–†–´–¢–ê–Ø –ü–£–ë–õ–ò–ß–ù–ê–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø ==="
  echo ""
  echo "üö® –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï:"
  echo "   ‚Ä¢ –õ—é–±–æ–π –º–æ–∂–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ"
  echo "   ‚Ä¢ –†–∏—Å–∫ —Å–ø–∞–º–∞ –∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π"
  echo "   ‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
  echo "   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"
  echo ""
  echo "üõ°Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:"
  echo "   ‚Ä¢ Rate limiting (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏)"
  echo "   ‚Ä¢ CAPTCHA –∑–∞—â–∏—Ç—É"
  echo "   ‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
  echo ""
  
  read -p "–í–´ –£–í–ï–†–ï–ù–´? –í–≤–µ–¥–∏—Ç–µ 'OPEN' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " final_confirm
  
  if [ "$final_confirm" != "OPEN" ]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return 0
  fi
  
  if ! backup_config; then
    return 1
  fi
  
  sed -i 's/enable_registration: false/enable_registration: true/' "$HOMESERVER_CONFIG"
  sed -i 's/registration_requires_token: true/registration_requires_token: false/' "$HOMESERVER_CONFIG"
  
  echo "‚úÖ –û—Ç–∫—Ä—ã—Ç–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞"
  echo ""
  echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!"
  echo "   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π"
  echo "   ‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"
  echo "   ‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
  
  restart_synapse
}

# =============================================================================
# –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–ö–ï–ù–ê–ú–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
# =============================================================================

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
create_registration_token() {
  echo "=== –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ==="
  echo ""
  
  if ! docker ps | grep -q "matrix-synapse"; then
    echo "‚ùå Matrix Synapse –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    return 1
  fi
  
  read -p "–ò–º—è —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏): " token_name
  read -p "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π (0 = –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ): " token_uses
  read -p "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤ –¥–Ω—è—Ö (0 = –±–µ—Å—Å—Ä–æ—á–Ω–æ): " token_days
  
  # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
  if ! [[ "$token_uses" =~ ^[0-9]+$ ]]; then
    echo "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º"
    return 1
  fi
  
  if ! [[ "$token_days" =~ ^[0-9]+$ ]]; then
    echo "‚ùå –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"
    return 1
  fi
  
  # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ Admin API
  local matrix_domain=$(grep "server_name:" "$HOMESERVER_CONFIG" | head -1 | sed 's/server_name: *"//' | sed 's/"//')
  local token_data="{\"uses_allowed\":$token_uses"
  
  if [ "$token_days" -gt 0 ]; then
    local expiry_time=$(($(date +%s) + $token_days * 86400))
    token_data="$token_data,\"expiry_time\":${expiry_time}000"
  fi
  
  token_data="$token_data}"
  
  echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞..."
  
  # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ SQL –∑–∞–ø—Ä–æ—Å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
  local token=$(openssl rand -hex 16)
  local sql_query="INSERT INTO registration_tokens (token, uses_allowed, pending, completed, expiry_time) VALUES ('$token', $token_uses, 0, 0, "
  
  if [ "$token_days" -gt 0 ]; then
    local expiry_ms=$(($(date +%s) * 1000 + $token_days * 86400000))
    sql_query="${sql_query}${expiry_ms});"
  else
    sql_query="${sql_query}NULL);"
  fi
  
  if docker exec matrix-postgres psql -U matrix -d matrix -c "$sql_query" >/dev/null 2>&1; then
    echo "‚úÖ –¢–æ–∫–µ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω:"
    echo ""
    echo "üé´ –¢–æ–∫–µ–Ω: $token"
    echo "üìù –ò–º—è: $token_name"
    echo "üî¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: $([ $token_uses -eq 0 ] && echo "–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ" || echo $token_uses)"
    echo "‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: $([ $token_days -eq 0 ] && echo "–±–µ—Å—Å—Ä–æ—á–Ω–æ" || echo "$token_days –¥–Ω–µ–π")"
    echo ""
    echo "üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "   –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Element Web –≤–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω"
    echo "   –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ API: ?access_token=$token"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
    echo "$(date '+%Y-%m-%d %H:%M:%S') | $token_name | $token | $token_uses uses | $token_days days" >> "$BACKUP_DIR/registration_tokens.log"
    
  else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞"
    return 1
  fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–∫–µ–Ω–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
list_registration_tokens() {
  echo "=== –¢–æ–∫–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ==="
  echo ""
  
  if ! docker ps | grep -q "matrix-synapse"; then
    echo "‚ùå Matrix Synapse –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    return 1
  fi
  
  local tokens=$(docker exec matrix-postgres psql -U matrix -d matrix -t -c "SELECT token, uses_allowed, pending, completed, expiry_time FROM registration_tokens ORDER BY expiry_time DESC;" 2>/dev/null)
  
  if [ -z "$tokens" ]; then
    echo "üìã –¢–æ–∫–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo ""
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ '–°–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'"
    return 0
  fi
  
  echo "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:"
  echo ""
  printf "%-20s %-12s %-8s %-8s %-15s\n" "–¢–û–ö–ï–ù" "–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ô" "–û–ñ–ò–î–ê–ï–¢" "–ó–ê–í–ï–†–®–ï–ù–û" "–ò–°–¢–ï–ö–ê–ï–¢"
  echo "--------------------------------------------------------------------------------"
  
  echo "$tokens" | while IFS='|' read -r token uses_allowed pending completed expiry_time; do
    # –û—á–∏—â–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
    token=$(echo "$token" | xargs)
    uses_allowed=$(echo "$uses_allowed" | xargs)
    pending=$(echo "$pending" | xargs)
    completed=$(echo "$completed" | xargs)
    expiry_time=$(echo "$expiry_time" | xargs)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è
    if [ "$expiry_time" = "" ] || [ "$expiry_time" = "null" ]; then
      expiry_str="–±–µ—Å—Å—Ä–æ—á–Ω–æ"
    else
      expiry_str=$(date -d "@$((expiry_time / 1000))" "+%Y-%m-%d" 2>/dev/null || echo "–æ—à–∏–±–∫–∞ –¥–∞—Ç—ã")
    fi
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
    uses_str=$([ "$uses_allowed" = "null" ] && echo "‚àû" || echo "$uses_allowed")
    
    printf "%-20s %-12s %-8s %-8s %-15s\n" "${token:0:20}" "$uses_str" "$pending" "$completed" "$expiry_str"
  done
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
delete_registration_token() {
  echo "=== –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ==="
  echo ""
  
  if ! docker ps | grep -q "matrix-synapse"; then
    echo "‚ùå Matrix Synapse –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    return 1
  fi
  
  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤
  list_registration_tokens
  echo ""
  
  read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: " token_to_delete
  
  if [ -z "$token_to_delete" ]; then
    echo "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
    return 1
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
  local token_exists=$(docker exec matrix-postgres psql -U matrix -d matrix -t -c "SELECT COUNT(*) FROM registration_tokens WHERE token='$token_to_delete';" 2>/dev/null | xargs)
  
  if [ "$token_exists" != "1" ]; then
    echo "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
    return 1
  fi
  
  # –£–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω
  if docker exec matrix-postgres psql -U matrix -d matrix -c "DELETE FROM registration_tokens WHERE token='$token_to_delete';" >/dev/null 2>&1; then
    echo "‚úÖ –¢–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω: $token_to_delete"
  else
    echo "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞"
    return 1
  fi
}

# =============================================================================
# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –ò –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
# =============================================================================

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
show_synapse_info() {
  echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Matrix Synapse ==="
  echo ""
  
  if ! check_synapse_installation; then
    return 1
  fi
  
  local matrix_domain=$(grep "server_name:" "$HOMESERVER_CONFIG" | head -1 | sed 's/server_name: *"//' | sed 's/"//')
  local version=$(docker exec matrix-synapse python -m synapse.app.homeserver --version 2>/dev/null | head -1 || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
  
  echo "üè† –°–µ—Ä–≤–µ—Ä: $matrix_domain"
  echo "üê≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: $(docker ps --filter 'name=matrix-synapse' --format '{{.Status}}')"
  echo "üì¶ –í–µ—Ä—Å–∏—è Synapse: $version"
  echo ""
  
  echo "üåê –§–ï–î–ï–†–ê–¶–ò–Ø:"
  get_federation_status
  echo ""
  
  echo "üë• –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø:"
  get_registration_status
  echo ""
  
  echo "üìÅ –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
  echo "   –û—Å–Ω–æ–≤–Ω–æ–π: $HOMESERVER_CONFIG"
  echo "   Docker: $DOCKER_COMPOSE_CONFIG"
  echo "   –ë—ç–∫–∞–ø—ã: $BACKUP_DIR"
}

# –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏–µ–π
manage_federation() {
  while true; do
    clear
    echo "=================================================================="
    echo "               –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–µ–π Matrix"
    echo "=================================================================="
    show_federation_domains
    echo ""
    echo "1. üåê –í–∫–ª—é—á–∏—Ç—å —Ñ–µ–¥–µ—Ä–∞—Ü–∏—é"
    echo "2. üö´ –û—Ç–∫–ª—é—á–∏—Ç—å —Ñ–µ–¥–µ—Ä–∞—Ü–∏—é"
    echo "3. ‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω"
    echo "4. ‚ûñ –£–¥–∞–ª–∏—Ç—å –¥–æ–º–µ–Ω"
    echo "5. üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "6. ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6): " fed_choice
    
    case $fed_choice in
      1) enable_federation ;;
      2) disable_federation ;;
      3) add_federation_domain ;;
      4) remove_federation_domain ;;
      5) show_federation_domains ;;
      6) return 0 ;;
      *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; sleep 2 ;;
    esac
    
    if [ $fed_choice -ne 5 ]; then
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    fi
  done
}

# –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
manage_registration() {
  while true; do
    clear
    echo "=================================================================="
    echo "             –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "=================================================================="
    show_registration_settings
    echo ""
    echo "1. ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∂–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    echo "2. üé´ –°–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    echo "3. üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω—ã"
    echo "4. üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω"
    echo "5. üë§ –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω)"
    echo "6. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "7. ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7): " reg_choice
    
    case $reg_choice in
      1) configure_registration ;;
      2) create_registration_token ;;
      3) list_registration_tokens ;;
      4) delete_registration_token ;;
      5) create_admin_user_direct ;;
      6) show_registration_settings ;;
      7) return 0 ;;
      *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; sleep 2 ;;
    esac
    
    if [ $reg_choice -ne 6 ]; then
      read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    fi
  done
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é
create_admin_user_direct() {
  echo "=== –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ shared secret ==="
  echo ""
  
  if ! docker ps | grep -q "matrix-synapse"; then
    echo "‚ùå Matrix Synapse –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    return 1
  fi
  
  read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " username
  read -p "–°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º? (Y/n): " make_admin
  
  local admin_flag=""
  if [[ $make_admin != [nN] ]]; then
    admin_flag="--admin"
  fi
  
  echo "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
  docker exec -it matrix-synapse register_new_matrix_user \
    -c /data/homeserver.yaml \
    -u "$username" \
    $admin_flag \
    http://localhost:8008
    
  if [ $? -eq 0 ]; then
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @$username —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
  else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
  fi
}

# –§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
restore_config() {
  echo "=== –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ==="
  echo ""
  
  if [ ! -d "$BACKUP_DIR" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_DIR"
    return 1
  fi
  
  local backups=$(ls "$BACKUP_DIR"/homeserver_*.yaml 2>/dev/null | sort -r)
  
  if [ -z "$backups" ]; then
    echo "‚ùå –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    return 1
  fi
  
  echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:"
  echo "$backups" | nl -w2 -s'. ' | sed 's|.*/||'
  echo ""
  
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: " backup_num
  
  local selected_backup=$(echo "$backups" | sed -n "${backup_num}p")
  
  if [ -z "$selected_backup" ]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    return 1
  fi
  
  echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑: $(basename "$selected_backup")"
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
  
  if [[ $confirm != [yY] ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return 0
  fi
  
  # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  backup_config
  
  # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–ø–∏–∏
  if cp "$selected_backup" "$HOMESERVER_CONFIG"; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    restart_synapse
  else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    return 1
  fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_main_menu() {
  clear
  echo "=================================================================="
  echo "            Matrix Synapse Management Module v1.0"
  echo "          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–µ–π –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
  echo "=================================================================="
  echo ""
  
  if check_synapse_installation >/dev/null 2>&1; then
    echo "‚úÖ Matrix Synapse –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é"
  else
    echo "‚ùå Matrix Synapse –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É"
  fi
  
  echo ""
  echo "1.  ‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ"
  echo "2.  üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–µ–π"
  echo "3.  üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π"
  echo "4.  üé´ –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"
  echo "5.  üë§ –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
  echo "6.  üìÅ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
  echo "7.  üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
  echo "8.  üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Synapse"
  echo "9.  ‚ùå –í—ã—Ö–æ–¥"
  echo "=================================================================="
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
main() {
  # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
  mkdir -p "$BACKUP_DIR"
  
  while true; do
    show_main_menu
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-9): " choice
    
    case $choice in
      1) 
        show_synapse_info
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        ;;
      2) 
        if check_synapse_installation; then
          manage_federation
        else
          read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        fi
        ;;
      3) 
        if check_synapse_installation; then
          manage_registration
        else
          read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        fi
        ;;
      4) 
        if check_synapse_installation; then
          create_registration_token
        fi
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        ;;
      5) 
        if check_synapse_installation; then
          create_admin_user_direct
        fi
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        ;;
      6) 
        backup_config
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        ;;
      7) 
        restore_config
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        ;;
      8) 
        if check_synapse_installation; then
          restart_synapse
        fi
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        ;;
      9) 
        echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        exit 0
        ;;
      *) 
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        sleep 2
        ;;
    esac
  done
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
  main "$@"
fi