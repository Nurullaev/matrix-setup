#!/bin/bash

# Coturn TURN Server Setup Module for Matrix
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç coturn –¥–ª—è –Ω–∞–¥–µ–∂–Ω—ã—Ö VoIP –≤—ã–∑–æ–≤–æ–≤
# –í–µ—Ä—Å–∏—è: 1.0.0

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è
LIB_NAME="Coturn TURN Server Setup"
LIB_VERSION="1.0.0"
MODULE_NAME="coturn_setup"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—â–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
COMMON_LIB="${SCRIPT_DIR}/../common/common_lib.sh"

if [ ! -f "$COMMON_LIB" ]; then
    echo "–û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ common_lib.sh –ø–æ –ø—É—Ç–∏: $COMMON_LIB"
    exit 1
fi

source "$COMMON_LIB"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
CONFIG_DIR="/opt/matrix-install"
COTURN_CONFIG_FILE="/etc/turnserver.conf"
COTURN_BACKUP_DIR="$CONFIG_DIR/coturn_backups"

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    print_header "COTURN TURN SERVER SETUP" "$GREEN"
    
    log "INFO" "–ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Coturn TURN Server..."
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    if ! check_coturn_requirements; then
        log "ERROR" "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
        return 1
    fi
    
    # –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è (–¥–ª—è NAT —Å–µ—Ä–≤–µ—Ä–æ–≤)
    if ! choose_turn_deployment; then
        log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        return 1
    fi
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–º–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏
    if ! get_turn_domain; then
        log "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º–µ–Ω TURN"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ coturn
    if ! install_coturn; then
        log "ERROR" "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ coturn"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if ! create_coturn_config; then
        log "ERROR" "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ coturn"
        return 1
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É–∂–±—ã
    if ! configure_coturn_service; then
        log "ERROR" "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª—É–∂–±—ã coturn"
        return 1
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
    if ! configure_coturn_firewall; then
        log "WARN" "–§–∞–π—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
    fi
    
    # –ó–∞–ø—É—Å–∫ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
    if ! start_and_verify_coturn; then
        log "ERROR" "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ coturn"
        return 1
    fi
    
    # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Matrix Synapse
    if ! integrate_with_synapse; then
        log "ERROR" "–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Matrix Synapse"
        return 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    test_coturn_functionality
    
    print_header "COTURN –£–°–¢–ê–ù–û–í–õ–ï–ù –£–°–ü–ï–®–ù–û!" "$GREEN"
    safe_echo "${GREEN}‚úÖ Coturn TURN Server –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ${NC}"
    safe_echo "${BLUE}üìã –î–æ–º–µ–Ω TURN: ${TURN_DOMAIN:-–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω}${NC}"
    safe_echo "${BLUE}üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $COTURN_CONFIG_FILE${NC}"
    safe_echo "${BLUE}üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: sudo ./modules/coturn_setup.sh${NC}"
    
    log "SUCCESS" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Coturn –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è coturn
check_coturn_requirements() {
    print_header "–ü–†–û–í–ï–†–ö–ê –¢–†–ï–ë–û–í–ê–ù–ò–ô –î–õ–Ø COTURN" "$BLUE"
    
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è coturn..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    check_root || return 1
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    local arch=$(uname -m)
    if [[ ! "$arch" =~ ^(x86_64|amd64|arm64|aarch64)$ ]]; then
        log "ERROR" "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $arch"
        return 1
    fi
    log "INFO" "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $arch - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–∞–º—è—Ç–∏ (–º–∏–Ω–∏–º—É–º 512MB –¥–ª—è coturn)
    local memory_kb=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    local memory_mb=$((memory_kb / 1024))
    
    if [ "$memory_mb" -lt 512 ]; then
        log "WARN" "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏: ${memory_mb}MB (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 512MB)"
        if ! ask_confirmation "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –æ–±—ä–µ–º–æ–º –ø–∞–º—è—Ç–∏?"; then
            return 1
        fi
    else
        log "INFO" "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å: ${memory_mb}MB - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
    check_internet || return 1
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    load_server_type || return 1
    log "INFO" "–¢–∏–ø —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_TYPE"
    
    log "SUCCESS" "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è coturn –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è TURN
choose_turn_deployment() {
    print_header "–í–´–ë–û–† –°–ü–û–°–û–ë–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø TURN" "$CYAN"
    
    case "$SERVER_TYPE" in
        "proxmox"|"home_server"|"docker"|"openvz")
            safe_echo "${YELLOW}‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê –° –°–ï–¢–ï–í–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ï–ô${NC}"
            safe_echo "${RED}–î–ª—è Proxmox –∑–∞ NAT —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã:${NC}"
            safe_echo "   - 3478 (TURN TCP/UDP)"
            safe_echo "   - 5349 (TURN TLS TCP/UDP)"  
            safe_echo "   - 49152-65535 (UDP relay range)"
            echo
            safe_echo "${BLUE}–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:${NC}"
            safe_echo "${GREEN}1.${NC} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–æ–≤ –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ)"
            safe_echo "${GREEN}2.${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π TURN —Å–µ—Ä–≤–µ—Ä (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
            safe_echo "${GREEN}3.${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π TURN —Å–µ—Ä–≤–µ—Ä Matrix.org"
            safe_echo "${GREEN}4.${NC} –û—Ç–º–µ–Ω–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É"
            ;;
        *)
            # –î–ª—è –æ–±–ª–∞—á–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
            return 0
            ;;
    esac
    
    echo
    read -p "$(safe_echo "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-4): ${NC}")" deployment_choice
    
    case $deployment_choice in
        1)
            show_router_configuration_help
            if ask_confirmation "–ü–æ—Ä—Ç—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ?"; then
                return 0  # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
            else
                return 1  # –ü—Ä–µ—Ä–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É
            fi
            ;;
        2)
            configure_external_turn_server
            return $?
            ;;
        3)
            configure_public_turn_server
            return $?
            ;;
        4)
            log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ TURN –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
            return 1
            ;;
        *)
            log "ERROR" "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            return 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–º–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –¥–ª—è TURN
get_turn_domain() {
    local domain_file="$CONFIG_DIR/domain"
    local turn_domain_file="$CONFIG_DIR/turn_domain"
    
    # –ß–∏—Ç–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω Matrix
    if [[ -f "$domain_file" ]]; then
        MATRIX_DOMAIN=$(cat "$domain_file")
        log "INFO" "–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω Matrix: $MATRIX_DOMAIN"
    else
        log "ERROR" "–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å –¥–æ–º–µ–Ω–æ–º Matrix —Å–µ—Ä–≤–µ—Ä–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –¥–æ–º–µ–Ω TURN
    if [[ -f "$turn_domain_file" ]]; then
        TURN_DOMAIN=$(cat "$turn_domain_file")
        log "INFO" "–ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –¥–æ–º–µ–Ω TURN: $TURN_DOMAIN"
        
        if ask_confirmation "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –¥–æ–º–µ–Ω TURN $TURN_DOMAIN?"; then
            return 0
        fi
    fi
    
    print_header "–ù–ê–°–¢–†–û–ô–ö–ê –î–û–ú–ï–ù–ê TURN –°–ï–†–í–ï–†–ê" "$CYAN"
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ–º–µ–Ω–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–µ—Ä–≤–µ—Ä–∞
    case "$SERVER_TYPE" in
        "proxmox"|"home_server"|"docker"|"openvz")
            local suggested_domain="turn.${MATRIX_DOMAIN#*.}"
            safe_echo "${BLUE}–î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–º–µ–Ω: ${CYAN}$suggested_domain${NC}"
            safe_echo "${YELLOW}–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã${NC}"
            ;;
        *)
            local suggested_domain="turn.$MATRIX_DOMAIN"
            safe_echo "${BLUE}–î–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–º–µ–Ω: ${CYAN}$suggested_domain${NC}"
            ;;
    esac
    
    while true; do
        echo
        safe_echo "${YELLOW}–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ–º–µ–Ω–∞ TURN —Å–µ—Ä–≤–µ—Ä–∞:${NC}"
        safe_echo "${GREEN}1.${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥–¥–æ–º–µ–Ω (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è): turn.$MATRIX_DOMAIN"
        safe_echo "${GREEN}2.${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω: $MATRIX_DOMAIN"
        safe_echo "${GREEN}3.${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å IP –∞–¥—Ä–µ—Å: ${PUBLIC_IP:-$LOCAL_IP}"
        safe_echo "${GREEN}4.${NC} –í–≤–µ—Å—Ç–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω"
        
        echo
        read -p "$(safe_echo "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-4): ${NC}")" domain_choice
        
        case $domain_choice in
            1)
                TURN_DOMAIN="turn.$MATRIX_DOMAIN"
                break
                ;;
            2)
                TURN_DOMAIN="$MATRIX_DOMAIN"
                break
                ;;
            3)
                TURN_DOMAIN="${PUBLIC_IP:-$LOCAL_IP}"
                break
                ;;
            4)
                read -p "$(safe_echo "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω TURN —Å–µ—Ä–≤–µ—Ä–∞: ${NC}")" custom_domain
                if [[ -n "$custom_domain" ]]; then
                    TURN_DOMAIN="$custom_domain"
                    break
                fi
                ;;
            *)
                log "ERROR" "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
                ;;
        esac
    done
    
    log "INFO" "–î–æ–º–µ–Ω TURN —Å–µ—Ä–≤–µ—Ä–∞: $TURN_DOMAIN"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–º–µ–Ω
    mkdir -p "$CONFIG_DIR"
    echo "$TURN_DOMAIN" > "$turn_domain_file"
    log "SUCCESS" "–î–æ–º–µ–Ω TURN —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $turn_domain_file"
    
    export TURN_DOMAIN
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ coturn
install_coturn() {
    print_header "–£–°–¢–ê–ù–û–í–ö–ê COTURN" "$BLUE"
    
    log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ coturn TURN —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ coturn
    if systemctl is-active --quiet coturn 2>/dev/null; then
        log "INFO" "Coturn —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
        local coturn_version=$(coturn --help 2>&1 | head -1 | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞")
        log "INFO" "–í–µ—Ä—Å–∏—è coturn: $coturn_version"
        
        if ask_confirmation "–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é coturn?"; then
            return 0
        else
            return 0
        fi
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ coturn
    log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ coturn..."
    if ! apt update; then
        log "ERROR" "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤"
        return 1
    fi
    
    if ! apt install -y coturn; then
        log "ERROR" "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ coturn"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if ! command -v turnserver >/dev/null 2>&1; then
        log "ERROR" "Coturn –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        return 1
    fi
    
    local coturn_version=$(turnserver --help 2>&1 | head -1 | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞")
    log "SUCCESS" "Coturn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–µ—Ä—Å–∏—è: $coturn_version"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ coturn
create_coturn_config() {
    print_header "–°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò COTURN" "$CYAN"
    
    log "INFO" "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ coturn..."
    
    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [[ -f "$COTURN_CONFIG_FILE" ]]; then
        backup_file "$COTURN_CONFIG_FILE" "coturn-config"
    fi
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    local turn_secret
    if [[ -f "$CONFIG_DIR/coturn_secret" ]]; then
        turn_secret=$(cat "$CONFIG_DIR/coturn_secret")
        log "INFO" "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–µ–∫—Ä–µ—Ç–∞ TURN"
    else
        turn_secret=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-32)
        echo "$turn_secret" > "$CONFIG_DIR/coturn_secret"
        chmod 600 "$CONFIG_DIR/coturn_secret"
        log "INFO" "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —Å–µ–∫—Ä–µ—Ç TURN"
    fi
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–µ—Ä–≤–µ—Ä–∞
    local listening_ip="0.0.0.0"
    local external_ip=""
    local relay_ips=""
    
    case "$SERVER_TYPE" in
        "proxmox"|"home_server"|"docker"|"openvz")
            # –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º NAT
            if [[ -n "${PUBLIC_IP:-}" ]] && [[ "$PUBLIC_IP" != "$LOCAL_IP" ]]; then
                external_ip="external-ip=$PUBLIC_IP"
                log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è NAT: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP $LOCAL_IP, –≤–Ω–µ—à–Ω–∏–π IP $PUBLIC_IP"
            else
                log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –±–µ–∑ NAT"
            fi
            
            # –†–∞–∑—Ä–µ—à–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ IP –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if [[ -n "${LOCAL_IP:-}" ]]; then
                relay_ips="allowed-peer-ip=$LOCAL_IP"
            fi
            ;;
        *)
            # –î–ª—è –æ–±–ª–∞—á–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π IP
            if [[ -n "${PUBLIC_IP:-}" ]]; then
                external_ip="external-ip=$PUBLIC_IP"
            fi
            log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
            ;;
    esac
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ coturn
    log "INFO" "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ $COTURN_CONFIG_FILE..."
    cat > "$COTURN_CONFIG_FILE" <<EOF
# Coturn TURN Server Configuration
# Generated by Matrix Setup Tool
# Server Type: $SERVER_TYPE
# Generated: $(date '+%Y-%m-%d %H:%M:%S')

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
listening-port=3478
tls-listening-port=5349

# –ê–¥—Ä–µ—Å–∞ –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
listening-ip=$listening_ip
$external_ip

# Realm (–¥–æ–º–µ–Ω) - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
realm=$TURN_DOMAIN

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
use-auth-secret
static-auth-secret=$turn_secret

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
syslog

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –ó–∞–ø—Ä–µ—â–∞–µ–º TCP relay –¥–ª—è VoIP (—Ç–æ–ª—å–∫–æ UDP)
no-tcp-relay

# –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
denied-peer-ip=10.0.0.0-10.255.255.255
denied-peer-ip=192.168.0.0-192.168.255.255
denied-peer-ip=172.16.0.0-172.31.255.255

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
no-multicast-peers
denied-peer-ip=0.0.0.0-0.255.255.255
denied-peer-ip=100.64.0.0-100.127.255.255
denied-peer-ip=127.0.0.0-127.255.255.255
denied-peer-ip=169.254.0.0-169.254.255.255
denied-peer-ip=192.0.0.0-192.0.0.255
denied-peer-ip=192.0.2.0-192.0.2.255
denied-peer-ip=192.88.99.0-192.88.99.255
denied-peer-ip=198.18.0.0-198.19.255.255
denied-peer-ip=198.51.100.0-198.51.100.255
denied-peer-ip=203.0.113.0-203.0.113.255
denied-peer-ip=240.0.0.0-255.255.255.255

# –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
$relay_ips

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è DoS –∞—Ç–∞–∫
user-quota=12
total-quota=1200

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
max-bps=3000000

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ TLS –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –ø–æ–∑–∂–µ)
no-tls
no-dtls

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è relay
min-port=49152
max-port=65535

# Fingerprint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏
fingerprint

# –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
mobility
EOF

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    chown root:root "$COTURN_CONFIG_FILE"
    chmod 644 "$COTURN_CONFIG_FILE"
    
    log "SUCCESS" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è coturn —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–∏–ø–∞ —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_TYPE"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª—É–∂–±—ã coturn
configure_coturn_service() {
    print_header "–ù–ê–°–¢–†–û–ô–ö–ê –°–õ–£–ñ–ë–´ COTURN" "$CYAN"
    
    log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å–ª—É–∂–±—ã coturn..."
    
    # –í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—Ç—É—Ä–Ω–∞ –≤ systemd
    if ! systemctl enable coturn; then
        log "ERROR" "–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ coturn"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É–∂–±—ã –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    local override_dir="/etc/systemd/system/coturn.service.d"
    mkdir -p "$override_dir"
    
    cat > "$override_dir/matrix-optimization.conf" <<EOF
# Matrix TURN Server Optimizations
[Unit]
Description=Coturn TURN Server for Matrix
After=network.target

[Service]
# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
LimitNOFILE=65536
LimitNPROC=32768

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
Restart=always
RestartSec=5
TimeoutStartSec=30
TimeoutStopSec=30

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
NoNewPrivileges=yes
ProtectSystem=strict
ProtectHome=yes
ReadWritePaths=/var/log /var/run

[Install]
WantedBy=multi-user.target
EOF

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    systemctl daemon-reload
    
    log "SUCCESS" "–°–ª—É–∂–±–∞ coturn –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞ –¥–ª—è coturn
configure_coturn_firewall() {
    print_header "–ù–ê–°–¢–†–û–ô–ö–ê –§–ê–ô–†–í–û–õ–ê –î–õ–Ø COTURN" "$CYAN"
    
    log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª —Ñ–∞–π—Ä–≤–æ–ª–∞ –¥–ª—è coturn..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ ufw
    if command -v ufw >/dev/null 2>&1; then
        log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª ufw –¥–ª—è coturn..."
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã TURN
        ufw allow 3478/tcp comment "Coturn TURN TCP"
        ufw allow 3478/udp comment "Coturn TURN UDP"
        ufw allow 5349/tcp comment "Coturn TURN TLS TCP"
        ufw allow 5349/udp comment "Coturn TURN TLS UDP"
        
        # –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤ –¥–ª—è relay
        ufw allow 49152:65535/udp comment "Coturn UDP relay range"
        
        log "SUCCESS" "–ü—Ä–∞–≤–∏–ª–∞ ufw –¥–ª—è coturn –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    else
        log "WARN" "ufw –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª –≤—Ä—É—á–Ω—É—é"
        safe_echo "${YELLOW}–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç—ã:${NC}"
        safe_echo "  - 3478/tcp –∏ 3478/udp (TURN)"
        safe_echo "  - 5349/tcp –∏ 5349/udp (TURN TLS)"
        safe_echo "  - 49152-65535/udp (UDP relay)"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ coturn
start_and_verify_coturn() {
    print_header "–ó–ê–ü–£–°–ö –ò –ü–†–û–í–ï–†–ö–ê COTURN" "$GREEN"
    
    log "INFO" "–ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã coturn..."
    
    # –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã
    if ! systemctl start coturn; then
        log "ERROR" "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ coturn"
        log "INFO" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u coturn -n 50"
        return 1
    fi
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    log "INFO" "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ coturn..."
    local attempts=0
    local max_attempts=10
    
    while [ $attempts -lt $max_attempts ]; do
        if systemctl is-active --quiet coturn; then
            log "SUCCESS" "Coturn –∑–∞–ø—É—â–µ–Ω"
            break
        fi
        
        attempts=$((attempts + 1))
        if [ $attempts -eq $max_attempts ]; then
            log "ERROR" "Coturn –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥"
            log "INFO" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u coturn -n 50"
            return 1
        fi
        
        log "DEBUG" "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞... ($attempts/$max_attempts)"
        sleep 1
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ—Ä—Ç–æ–≤..."
    if check_port 3478; then
        log "SUCCESS" "–ü–æ—Ä—Ç 3478 –≥–æ—Ç–æ–≤ –¥–ª—è TURN —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"
    else
        log "WARN" "–ü–æ—Ä—Ç 3478 –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    if check_port 5349; then
        log "SUCCESS" "–ü–æ—Ä—Ç 5349 –≥–æ—Ç–æ–≤ –¥–ª—è TURN TLS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"
    else
        log "WARN" "–ü–æ—Ä—Ç 5349 –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    log "SUCCESS" "Coturn –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Matrix Synapse
integrate_with_synapse() {
    print_header "–ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° MATRIX SYNAPSE" "$MAGENTA"
    
    log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ coturn —Å Matrix Synapse..."
    
    # –ß–∏—Ç–∞–µ–º —Å–µ–∫—Ä–µ—Ç TURN
    local turn_secret
    if [[ -f "$CONFIG_DIR/coturn_secret" ]]; then
        turn_secret=$(cat "$CONFIG_DIR/coturn_secret")
    else
        log "ERROR" "–°–µ–∫—Ä–µ—Ç TURN –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Synapse
    local synapse_turn_config="$CONFIG_DIR/synapse_turn_config.yaml"
    log "INFO" "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ TURN –¥–ª—è Synapse..."
    
    cat > "$synapse_turn_config" <<EOF
# TURN server configuration for Matrix Synapse
# Add this to your homeserver.yaml or include it via config includes

# TURN server URIs
turn_uris:
  - "turn:$TURN_DOMAIN:3478?transport=udp"
  - "turn:$TURN_DOMAIN:3478?transport=tcp"

# Shared secret for TURN authentication
turn_shared_secret: "$turn_secret"

# User lifetime for TURN credentials (24 hours)
turn_user_lifetime: 86400000

# Allow guests to use TURN server
turn_allow_guests: true
EOF

    chmod 600 "$synapse_turn_config"
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Synapse –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
    local synapse_config="/etc/matrix-synapse/homeserver.yaml"
    local synapse_conf_d="/etc/matrix-synapse/conf.d"
    
    if [[ -d "$synapse_conf_d" ]]; then
        # –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± - –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –≤ conf.d
        local turn_config_file="$synapse_conf_d/turn.yaml"
        cp "$synapse_turn_config" "$turn_config_file"
        chown matrix-synapse:matrix-synapse "$turn_config_file" 2>/dev/null || true
        
        log "SUCCESS" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è TURN –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ $turn_config_file"
    elif [[ -f "$synapse_config" ]]; then
        # –†–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é
        log "WARN" "–î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ $synapse_config:"
        echo
        safe_echo "${CYAN}# TURN server configuration${NC}"
        safe_echo "${CYAN}turn_uris:${NC}"
        safe_echo "${CYAN}  - \"turn:$TURN_DOMAIN:3478?transport=udp\"${NC}"
        safe_echo "${CYAN}  - \"turn:$TURN_DOMAIN:3478?transport=tcp\"${NC}"
        safe_echo "${CYAN}turn_shared_secret: \"$turn_secret\"${NC}"
        safe_echo "${CYAN}turn_user_lifetime: 86400000${NC}"
        safe_echo "${CYAN}turn_allow_guests: true${NC}"
        echo
    else
        log "WARN" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Synapse –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        log "INFO" "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª $synapse_turn_config –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    fi
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    cat > "$CONFIG_DIR/coturn_info.conf" <<EOF
# Coturn TURN Server Information
TURN_DOMAIN=$TURN_DOMAIN
TURN_SECRET_FILE=$CONFIG_DIR/coturn_secret
SYNAPSE_TURN_CONFIG=$synapse_turn_config
INSTALL_DATE=$(date '+%Y-%m-%d %H:%M:%S')
SERVER_TYPE=$SERVER_TYPE
EOF

    log "SUCCESS" "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Matrix Synapse –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    log "INFO" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Matrix Synapse –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ TURN"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è coturn
test_coturn_functionality() {
    print_header "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï COTURN" "$GREEN"
    
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ coturn..."
    
    # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if ! systemctl is-active --quiet coturn; then
        log "ERROR" "Coturn –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    local ports=(3478 5349)
    for port in "${ports[@]}"; do
        if ss -tlnp | grep -q ":$port "; then
            log "SUCCESS" "‚úì –ü–æ—Ä—Ç $port –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
        else
            log "WARN" "‚úó –ü–æ—Ä—Ç $port –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if turnserver --check-config -c "$COTURN_CONFIG_FILE" >/dev/null 2>&1; then
        log "SUCCESS" "‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è coturn –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    else
        log "WARN" "‚úó –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ coturn"
    fi
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
    safe_echo "${BOLD}${BLUE}–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
    safe_echo "1. ${CYAN}–¢–µ—Å—Ç–µ—Ä Matrix VoIP:${NC}"
    safe_echo "   https://test.voip.librepush.net/"
    echo
    safe_echo "2. ${CYAN}WebRTC —Ç–µ—Å—Ç–µ—Ä:${NC}"
    safe_echo "   https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/"
    echo
    safe_echo "3. ${CYAN}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:${NC}"
    safe_echo "   TURN URI: turn:$TURN_DOMAIN:3478"
    safe_echo "   Username: test"
    safe_echo "   Password: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ credentials –∏–∑ Synapse"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
create_external_turn_install_script() {
    local external_turn_ip="$1"
    local turn_secret="$2"
    local install_script="$CONFIG_DIR/external_turn_install.sh"
    
    log "INFO" "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞..."
    
    cat > "$install_script" <<'SCRIPT_EOF'
#!/bin/bash
# Automatic Coturn TURN Server Installation Script
# Generated by Matrix Setup Tool for external server

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo -e "${GREEN}          COTURN TURN SERVER INSTALLATION SCRIPT              ${NC}"
echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo

# Check root privileges
if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}Error: This script must be run as root${NC}"
    echo "Usage: sudo $0"
    exit 1
fi

# Update system
echo -e "${BLUE}Updating system packages...${NC}"
apt update && apt upgrade -y

# Install coturn
echo -e "${BLUE}Installing coturn...${NC}"
apt install -y coturn

echo -e "${GREEN}‚úÖ Coturn installation completed!${NC}"
SCRIPT_EOF
    
    # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Å–∫—Ä–∏–ø—Ç–µ
    sed -i "s/EXTERNAL_IP_PLACEHOLDER/$external_turn_ip/g" "$install_script"
    sed -i "s/TURN_SECRET_PLACEHOLDER/$turn_secret/g" "$install_script"
    sed -i "s/TURN_DOMAIN_PLACEHOLDER/$TURN_DOMAIN/g" "$install_script"
    
    chmod +x "$install_script"
    
    log "SUCCESS" "–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–∑–¥–∞–Ω: $install_script"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞
configure_external_turn_server() {
    print_header "–ù–ê–°–¢–†–û–ô–ö–ê –í–ù–ï–®–ù–ï–ì–û TURN –°–ï–†–í–ï–†–ê" "$BLUE"
    
    safe_echo "${BLUE}–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –¥–ª—è TURN —Å–µ—Ä–≤–µ—Ä–∞:${NC}"
    safe_echo "1. Hetzner Cloud (–æ—Ç 300‚ÇΩ/–º–µ—Å)"
    safe_echo "2. DigitalOcean (–æ—Ç \$4/–º–µ—Å)"
    safe_echo "3. Vultr (–æ—Ç \$2.50/–º–µ—Å)"
    safe_echo "4. –°–≤–æ–π VPS"
    echo
    
    read -p "$(safe_echo "${YELLOW}–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å –≤–Ω–µ—à–Ω–µ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞: ${NC}")" external_turn_ip
    read -p "$(safe_echo "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω TURN —Å–µ—Ä–≤–µ—Ä–∞ (–∏–ª–∏ Enter –¥–ª—è IP): ${NC}")" external_turn_domain
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è IP –∞–¥—Ä–µ—Å–∞
    if [[ ! "$external_turn_ip" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        log "ERROR" "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP –∞–¥—Ä–µ—Å–∞: $external_turn_ip"
        return 1
    fi
    
    TURN_DOMAIN="${external_turn_domain:-$external_turn_ip}"
    echo "$TURN_DOMAIN" > "$CONFIG_DIR/turn_domain"
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–∞ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    local turn_secret=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-32)
    echo "$turn_secret" > "$CONFIG_DIR/coturn_secret"
    chmod 600 "$CONFIG_DIR/coturn_secret"
    
    log "INFO" "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–µ–∫—Ä–µ—Ç TURN –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    create_external_turn_install_script "$external_turn_ip" "$turn_secret"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Synapse –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ TURN
    configure_synapse_for_external_turn
    
    log "SUCCESS" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞ –≥–æ—Ç–æ–≤–∞"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞
configure_public_turn_server() {
    print_header "–ù–ê–°–¢–†–û–ô–ö–ê –ü–£–ë–õ–ò–ß–ù–û–ì–û TURN –°–ï–†–í–ï–†–ê" "$GREEN"
    
    safe_echo "${BLUE}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞ Matrix.org${NC}"
    safe_echo "${YELLOW}‚ö†Ô∏è –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è${NC}"
    safe_echo "${RED}–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞!${NC}"
    echo
    
    if ask_confirmation "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –ø—É–±–ª–∏—á–Ω—ã–º TURN —Å–µ—Ä–≤–µ—Ä–æ–º?"; then
        TURN_DOMAIN="turn.matrix.org"
        echo "$TURN_DOMAIN" > "$CONFIG_DIR/turn_domain"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ TURN
        local synapse_turn_config="$CONFIG_DIR/synapse_turn_config.yaml"
        cat > "$synapse_turn_config" <<EOF
# Public TURN server configuration (TEMPORARY SOLUTION)
turn_uris:
  - "turn:turn.matrix.org:3478?transport=udp"
  - "turn:turn.matrix.org:3478?transport=tcp"
  - "turns:turn.matrix.org:5349?transport=udp"
  - "turns:turn.matrix.org:5349?transport=tcp"

turn_shared_secret: "placeholder_secret"
turn_user_lifetime: 86400000
turn_allow_guests: true
EOF
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Synapse
        local synapse_conf_d="/etc/matrix-synapse/conf.d"
        if [[ -d "$synapse_conf_d" ]]; then
            cp "$synapse_turn_config" "$synapse_conf_d/turn.yaml"
            chown matrix-synapse:matrix-synapse "$synapse_conf_d/turn.yaml" 2>/dev/null || true
        fi
        
        log "SUCCESS" "–ü—É–±–ª–∏—á–Ω—ã–π TURN —Å–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Synapse –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ TURN
configure_synapse_for_external_turn() {
    log "INFO" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Matrix Synapse –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ TURN —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Synapse
    integrate_with_synapse
    
    return $?
}

# –§—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ TURN
diagnose_turn_connectivity() {
    print_header "–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–¢–ï–í–û–ô –î–û–°–¢–£–ü–ù–û–°–¢–ò TURN" "$YELLOW"
    
    log "INFO" "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ TURN —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    echo
    safe_echo "${BOLD}${BLUE}1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤:${NC}"
    local ports=(3478 5349)
    
    for port in "${ports[@]}"; do
        if ss -tlnp | grep -q ":$port "; then
            safe_echo "   ${GREEN}‚úì${NC} –ü–æ—Ä—Ç $port –ª–æ–∫–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            safe_echo "   ${RED}‚úó${NC} –ü–æ—Ä—Ç $port –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã
    echo
    safe_echo "${BOLD}${BLUE}2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã:${NC}"
    if systemctl is-active --quiet coturn; then
        safe_echo "   ${GREEN}‚úì${NC} –°–ª—É–∂–±–∞ coturn –∑–∞–ø—É—â–µ–Ω–∞"
    else
        safe_echo "   ${RED}‚úó${NC} –°–ª—É–∂–±–∞ coturn –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
        safe_echo "   ${CYAN}–ó–∞–ø—É—Å—Ç–∏—Ç–µ: systemctl start coturn${NC}"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ—É—Ç–µ—Ä–∞
show_router_configuration_help() {
    print_header "–ù–ê–°–¢–†–û–ô–ö–ê –ü–û–†–¢–û–í –ù–ê –†–û–£–¢–ï–†–ï" "$YELLOW"
    
    safe_echo "${BOLD}–î–ª—è —Ä–∞–±–æ—Ç—ã TURN —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç—ã:${NC}"
    echo
    safe_echo "${CYAN}–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã TURN:${NC}"
    safe_echo "   3478/tcp ‚Üí ${LOCAL_IP}:3478"
    safe_echo "   3478/udp ‚Üí ${LOCAL_IP}:3478"
    safe_echo "   5349/tcp ‚Üí ${LOCAL_IP}:5349"  
    safe_echo "   5349/udp ‚Üí ${LOCAL_IP}:5349"
    echo
    safe_echo "${CYAN}UDP relay –¥–∏–∞–ø–∞–∑–æ–Ω:${NC}"
    safe_echo "   49152-65535/udp ‚Üí ${LOCAL_IP}:49152-65535"
    echo
    safe_echo "${RED}‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë–æ–ª—å—à–æ–π UDP –¥–∏–∞–ø–∞–∑–æ–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É${NC}"
    safe_echo "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π TURN —Å–µ—Ä–≤–µ—Ä${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –º–æ–¥—É–ª—è
coturn_menu() {
    while true; do
        print_header "–£–ü–†–ê–í–õ–ï–ù–ò–ï COTURN TURN SERVER" "$CYAN"
        
        safe_echo "${BOLD}–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:${NC}"
        safe_echo "${GREEN}1.${NC} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å coturn (–∞–≤—Ç–æ–≤—ã–±–æ—Ä —Ç–∏–ø–∞)"
        safe_echo "${GREEN}2.${NC} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)"
        safe_echo "${GREEN}3.${NC} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π TURN —Å–µ—Ä–≤–µ—Ä"
        safe_echo "${GREEN}4.${NC} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π TURN —Å–µ—Ä–≤–µ—Ä"
        safe_echo "${GREEN}5.${NC} –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        safe_echo "${GREEN}6.${NC} –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
        safe_echo "${GREEN}7.${NC} –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
        safe_echo "${GREEN}8.${NC} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        
        echo
        read -p "$(safe_echo "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-8): ${NC}")" choice
        
        case $choice in
            1) 
                main 
                ;;
            2) 
                log "INFO" "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–∫–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ coturn..."
                if check_coturn_requirements && get_turn_domain; then
                    install_coturn && create_coturn_config && configure_coturn_service && \
                    configure_coturn_firewall && start_and_verify_coturn && \
                    integrate_with_synapse && test_coturn_functionality
                fi
                ;;
            3)
                if check_coturn_requirements; then
                    configure_external_turn_server
                fi
                ;;
            4)
                if check_coturn_requirements; then
                    configure_public_turn_server
                fi
                ;;
            5) 
                test_coturn_functionality
                ;;
            6) 
                test_coturn_functionality 
                ;;
            7)
                diagnose_turn_connectivity
                ;;
            8) 
                break 
                ;;
            *) 
                log "ERROR" "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" 
                ;;
        esac
        
        if [ $choice -ne 8 ]; then
            echo
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        fi
    done
}

# –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
export -f main
export -f coturn_menu
export -f test_coturn_functionality

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—ã–∑–≤–∞–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞–ø—Ä—è–º—É—é
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    coturn_menu
fi